apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    microless: video
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: k8s-backend
    app.kubernetes.io/component: minio-service
    app.kubernetes.io/part-of: video
  namespace: video-backend
spec:
  ports:
  - port: 9000
  clusterIP: None
  selector:
    microless: video
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: k8s-backend
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: video
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    microless: video
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: k8s-backend
    app.kubernetes.io/component: minio-statefulset
    app.kubernetes.io/part-of: video
  namespace: video-backend
spec:
  replicas: 1
  serviceName: minio
  selector:
    matchLabels:
      microless: video
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: k8s-backend
      app.kubernetes.io/component: minio
      app.kubernetes.io/part-of: video
  template:
    metadata:
      labels:
        microless: video
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: k8s-backend
        app.kubernetes.io/component: minio
        app.kubernetes.io/part-of: video
      name: minio
      namespace: video-backend
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2022-10-15T19-57-03Z
        command: ["minio", "server", "/data"]
        ports:
        - containerPort: 9000
        volumeMounts:
          - name: video-minio-data
            mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: video-minio-data
      labels:
        microless: video
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: k8s-backend
        app.kubernetes.io/component: minio-data
        app.kubernetes.io/part-of: video
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi