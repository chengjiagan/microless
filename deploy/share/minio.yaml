apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
    app.kubernetes.io/component: minio-service
  namespace: minio
spec:
  ports:
  - port: 9000
  clusterIP: None
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
    app.kubernetes.io/component: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
    app.kubernetes.io/component: minio-statefulset
  namespace: minio
spec:
  replicas: 1
  serviceName: minio
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: minio
      app.kubernetes.io/component: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: minio
        app.kubernetes.io/component: minio
      name: minio
      namespace: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2022-10-15T19-57-03Z
        command: ["minio", "server", "/data"]
        ports:
        - containerPort: 9000
        volumeMounts:
          - name: minio-data
            mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: minio-data
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: minio
        app.kubernetes.io/component: minio-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi