// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: proto/movieinfo.proto

package movieinfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	proto "microless/media/proto"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteMovieInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Casts        []*proto.Cast `protobuf:"bytes,2,rep,name=casts,proto3" json:"casts,omitempty"`
	PlotId       string        `protobuf:"bytes,3,opt,name=plot_id,json=plotId,proto3" json:"plot_id,omitempty"`
	ThumbnailIds []string      `protobuf:"bytes,4,rep,name=thumbnail_ids,json=thumbnailIds,proto3" json:"thumbnail_ids,omitempty"`
	PhotoIds     []string      `protobuf:"bytes,5,rep,name=photo_ids,json=photoIds,proto3" json:"photo_ids,omitempty"`
	VideoIds     []string      `protobuf:"bytes,6,rep,name=video_ids,json=videoIds,proto3" json:"video_ids,omitempty"`
	AvgRating    float64       `protobuf:"fixed64,7,opt,name=avg_rating,json=avgRating,proto3" json:"avg_rating,omitempty"`
	NumRating    int32         `protobuf:"varint,8,opt,name=num_rating,json=numRating,proto3" json:"num_rating,omitempty"`
}

func (x *WriteMovieInfoRequest) Reset() {
	*x = WriteMovieInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movieinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMovieInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMovieInfoRequest) ProtoMessage() {}

func (x *WriteMovieInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movieinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMovieInfoRequest.ProtoReflect.Descriptor instead.
func (*WriteMovieInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_movieinfo_proto_rawDescGZIP(), []int{0}
}

func (x *WriteMovieInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WriteMovieInfoRequest) GetCasts() []*proto.Cast {
	if x != nil {
		return x.Casts
	}
	return nil
}

func (x *WriteMovieInfoRequest) GetPlotId() string {
	if x != nil {
		return x.PlotId
	}
	return ""
}

func (x *WriteMovieInfoRequest) GetThumbnailIds() []string {
	if x != nil {
		return x.ThumbnailIds
	}
	return nil
}

func (x *WriteMovieInfoRequest) GetPhotoIds() []string {
	if x != nil {
		return x.PhotoIds
	}
	return nil
}

func (x *WriteMovieInfoRequest) GetVideoIds() []string {
	if x != nil {
		return x.VideoIds
	}
	return nil
}

func (x *WriteMovieInfoRequest) GetAvgRating() float64 {
	if x != nil {
		return x.AvgRating
	}
	return 0
}

func (x *WriteMovieInfoRequest) GetNumRating() int32 {
	if x != nil {
		return x.NumRating
	}
	return 0
}

type WriteMovieInfoRespond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *WriteMovieInfoRespond) Reset() {
	*x = WriteMovieInfoRespond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movieinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMovieInfoRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMovieInfoRespond) ProtoMessage() {}

func (x *WriteMovieInfoRespond) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movieinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMovieInfoRespond.ProtoReflect.Descriptor instead.
func (*WriteMovieInfoRespond) Descriptor() ([]byte, []int) {
	return file_proto_movieinfo_proto_rawDescGZIP(), []int{1}
}

func (x *WriteMovieInfoRespond) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

type ReadMovieInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *ReadMovieInfoRequest) Reset() {
	*x = ReadMovieInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movieinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMovieInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMovieInfoRequest) ProtoMessage() {}

func (x *ReadMovieInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movieinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMovieInfoRequest.ProtoReflect.Descriptor instead.
func (*ReadMovieInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_movieinfo_proto_rawDescGZIP(), []int{2}
}

func (x *ReadMovieInfoRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

type UpdateRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId              string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	SumUncommittedRating int32  `protobuf:"varint,2,opt,name=sum_uncommitted_rating,json=sumUncommittedRating,proto3" json:"sum_uncommitted_rating,omitempty"`
	NumUncommittedRating int32  `protobuf:"varint,3,opt,name=num_uncommitted_rating,json=numUncommittedRating,proto3" json:"num_uncommitted_rating,omitempty"`
}

func (x *UpdateRatingRequest) Reset() {
	*x = UpdateRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movieinfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRatingRequest) ProtoMessage() {}

func (x *UpdateRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movieinfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRatingRequest.ProtoReflect.Descriptor instead.
func (*UpdateRatingRequest) Descriptor() ([]byte, []int) {
	return file_proto_movieinfo_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRatingRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *UpdateRatingRequest) GetSumUncommittedRating() int32 {
	if x != nil {
		return x.SumUncommittedRating
	}
	return 0
}

func (x *UpdateRatingRequest) GetNumUncommittedRating() int32 {
	if x != nil {
		return x.NumUncommittedRating
	}
	return 0
}

var File_proto_movieinfo_proto protoreflect.FileDescriptor

var file_proto_movieinfo_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x90, 0x02, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x52, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x76, 0x67, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x75, 0x6d, 0x5f, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x73, 0x75, 0x6d, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x75, 0x6e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x32, 0xbe, 0x02, 0x0a, 0x10, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x74, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x30, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x5c, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2e, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x21, 0x5a, 0x1f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_movieinfo_proto_rawDescOnce sync.Once
	file_proto_movieinfo_proto_rawDescData = file_proto_movieinfo_proto_rawDesc
)

func file_proto_movieinfo_proto_rawDescGZIP() []byte {
	file_proto_movieinfo_proto_rawDescOnce.Do(func() {
		file_proto_movieinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_movieinfo_proto_rawDescData)
	})
	return file_proto_movieinfo_proto_rawDescData
}

var file_proto_movieinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_movieinfo_proto_goTypes = []interface{}{
	(*WriteMovieInfoRequest)(nil), // 0: microless.media.movieinfo.WriteMovieInfoRequest
	(*WriteMovieInfoRespond)(nil), // 1: microless.media.movieinfo.WriteMovieInfoRespond
	(*ReadMovieInfoRequest)(nil),  // 2: microless.media.movieinfo.ReadMovieInfoRequest
	(*UpdateRatingRequest)(nil),   // 3: microless.media.movieinfo.UpdateRatingRequest
	(*proto.Cast)(nil),            // 4: microless.media.Cast
	(*proto.MovieInfo)(nil),       // 5: microless.media.MovieInfo
	(*emptypb.Empty)(nil),         // 6: google.protobuf.Empty
}
var file_proto_movieinfo_proto_depIdxs = []int32{
	4, // 0: microless.media.movieinfo.WriteMovieInfoRequest.casts:type_name -> microless.media.Cast
	0, // 1: microless.media.movieinfo.MovieInfoService.WriteMovieInfo:input_type -> microless.media.movieinfo.WriteMovieInfoRequest
	2, // 2: microless.media.movieinfo.MovieInfoService.ReadMovieInfo:input_type -> microless.media.movieinfo.ReadMovieInfoRequest
	3, // 3: microless.media.movieinfo.MovieInfoService.UpdateRating:input_type -> microless.media.movieinfo.UpdateRatingRequest
	1, // 4: microless.media.movieinfo.MovieInfoService.WriteMovieInfo:output_type -> microless.media.movieinfo.WriteMovieInfoRespond
	5, // 5: microless.media.movieinfo.MovieInfoService.ReadMovieInfo:output_type -> microless.media.MovieInfo
	6, // 6: microless.media.movieinfo.MovieInfoService.UpdateRating:output_type -> google.protobuf.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_movieinfo_proto_init() }
func file_proto_movieinfo_proto_init() {
	if File_proto_movieinfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_movieinfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMovieInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movieinfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMovieInfoRespond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movieinfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMovieInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movieinfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_movieinfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_movieinfo_proto_goTypes,
		DependencyIndexes: file_proto_movieinfo_proto_depIdxs,
		MessageInfos:      file_proto_movieinfo_proto_msgTypes,
	}.Build()
	File_proto_movieinfo_proto = out.File
	file_proto_movieinfo_proto_rawDesc = nil
	file_proto_movieinfo_proto_goTypes = nil
	file_proto_movieinfo_proto_depIdxs = nil
}
