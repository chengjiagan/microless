# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import data_pb2 as proto_dot_data__pb2
from proto import movieinfo_pb2 as proto_dot_movieinfo__pb2


class MovieInfoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WriteMovieInfo = channel.unary_unary(
                '/microless.media.movieinfo.MovieInfoService/WriteMovieInfo',
                request_serializer=proto_dot_movieinfo__pb2.WriteMovieInfoRequest.SerializeToString,
                response_deserializer=proto_dot_movieinfo__pb2.WriteMovieInfoRespond.FromString,
                )
        self.ReadMovieInfo = channel.unary_unary(
                '/microless.media.movieinfo.MovieInfoService/ReadMovieInfo',
                request_serializer=proto_dot_movieinfo__pb2.ReadMovieInfoRequest.SerializeToString,
                response_deserializer=proto_dot_data__pb2.MovieInfo.FromString,
                )
        self.UpdateRating = channel.unary_unary(
                '/microless.media.movieinfo.MovieInfoService/UpdateRating',
                request_serializer=proto_dot_movieinfo__pb2.UpdateRatingRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class MovieInfoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def WriteMovieInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadMovieInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MovieInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WriteMovieInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteMovieInfo,
                    request_deserializer=proto_dot_movieinfo__pb2.WriteMovieInfoRequest.FromString,
                    response_serializer=proto_dot_movieinfo__pb2.WriteMovieInfoRespond.SerializeToString,
            ),
            'ReadMovieInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadMovieInfo,
                    request_deserializer=proto_dot_movieinfo__pb2.ReadMovieInfoRequest.FromString,
                    response_serializer=proto_dot_data__pb2.MovieInfo.SerializeToString,
            ),
            'UpdateRating': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRating,
                    request_deserializer=proto_dot_movieinfo__pb2.UpdateRatingRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'microless.media.movieinfo.MovieInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MovieInfoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def WriteMovieInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.media.movieinfo.MovieInfoService/WriteMovieInfo',
            proto_dot_movieinfo__pb2.WriteMovieInfoRequest.SerializeToString,
            proto_dot_movieinfo__pb2.WriteMovieInfoRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadMovieInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.media.movieinfo.MovieInfoService/ReadMovieInfo',
            proto_dot_movieinfo__pb2.ReadMovieInfoRequest.SerializeToString,
            proto_dot_data__pb2.MovieInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.media.movieinfo.MovieInfoService/UpdateRating',
            proto_dot_movieinfo__pb2.UpdateRatingRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
