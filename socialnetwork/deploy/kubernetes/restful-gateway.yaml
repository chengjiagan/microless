apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    microless: social-network
    app.kubernetes.io/name: service-gateway
    app.kubernetes.io/instance: k8s-deploy
    app.kubernetes.io/component: service-ingress
    app.kubernetes.io/part-of: social-network
  name: ingress
  namespace: social-network
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: gateway
            port:
              number: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    microless: social-network
    app.kubernetes.io/name: restful-gateway
    app.kubernetes.io/instance: k8s-deploy
    app.kubernetes.io/component: restful-gateway-service
    app.kubernetes.io/part-of: social-network
  namespace: social-network
spec:
  ports:
  - port: 8081
    name: http
    targetPort: http
  selector:
    microless: social-network
    app.kubernetes.io/name: restful-gateway
    app.kubernetes.io/instance: k8s-deploy
    app.kubernetes.io/component: restful-gateway
    app.kubernetes.io/part-of: social-network
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    microless: social-network
    app.kubernetes.io/name: restful-gateway
    app.kubernetes.io/instance: k8s-deploy
    app.kubernetes.io/component: restful-gateway-deployment
    app.kubernetes.io/part-of: social-network
  namespace: social-network
spec:
  replicas: 1
  selector:
    matchLabels:
      microless: social-network
      app.kubernetes.io/name: restful-gateway
      app.kubernetes.io/instance: k8s-deploy
      app.kubernetes.io/component: restful-gateway
      app.kubernetes.io/part-of: social-network
  template:
    metadata:
      labels:
        microless: social-network
        app.kubernetes.io/name: restful-gateway
        app.kubernetes.io/instance: k8s-deploy
        app.kubernetes.io/component: restful-gateway
        app.kubernetes.io/part-of: social-network
      name: gateway
    spec:
      containers:
      - name: server
        image: microless/gateway:0.1.3
        ports:
        - name: http
          containerPort: 8081
        env:
        - name: SERVICE_CONFIG
          value: "/config/config.json"
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
      volumes:
        - name: config
          configMap:
            name: config
            items:
            - key: config.json
              path: config.json