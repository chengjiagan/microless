# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/data.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10proto/data.proto\x12\x17microless.socialnetwork\x1a\x1fgoogle/protobuf/timestamp.proto\"-\n\x05Media\x12\x10\n\x08media_id\x18\x01 \x01(\x03\x12\x12\n\nmedia_type\x18\x02 \x01(\t\"2\n\x03Url\x12\x15\n\rshortened_url\x18\x01 \x01(\t\x12\x14\n\x0c\x65xpanded_url\x18\x02 \x01(\t\"0\n\x0bUserMention\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\",\n\x07\x43reator\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\"\xc4\x02\n\x04Post\x12\x31\n\x07\x63reator\x18\x01 \x01(\x0b\x32 .microless.socialnetwork.Creator\x12\x0c\n\x04text\x18\x02 \x01(\t\x12;\n\ruser_mentions\x18\x03 \x03(\x0b\x32$.microless.socialnetwork.UserMention\x12-\n\x05media\x18\x04 \x03(\x0b\x32\x1e.microless.socialnetwork.Media\x12*\n\x04urls\x18\x05 \x03(\x0b\x32\x1c.microless.socialnetwork.Url\x12-\n\ttimestamp\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x34\n\tpost_type\x18\x07 \x01(\x0e\x32!.microless.socialnetwork.PostType*3\n\x08PostType\x12\x08\n\x04POST\x10\x00\x12\n\n\x06REPOST\x10\x01\x12\t\n\x05REPLY\x10\x02\x12\x06\n\x02\x44M\x10\x03\x42\x1fZ\x1dmicroless/socialnetwork/protob\x06proto3')

_POSTTYPE = DESCRIPTOR.enum_types_by_name['PostType']
PostType = enum_type_wrapper.EnumTypeWrapper(_POSTTYPE)
POST = 0
REPOST = 1
REPLY = 2
DM = 3


_MEDIA = DESCRIPTOR.message_types_by_name['Media']
_URL = DESCRIPTOR.message_types_by_name['Url']
_USERMENTION = DESCRIPTOR.message_types_by_name['UserMention']
_CREATOR = DESCRIPTOR.message_types_by_name['Creator']
_POST = DESCRIPTOR.message_types_by_name['Post']
Media = _reflection.GeneratedProtocolMessageType('Media', (_message.Message,), {
  'DESCRIPTOR' : _MEDIA,
  '__module__' : 'proto.data_pb2'
  # @@protoc_insertion_point(class_scope:microless.socialnetwork.Media)
  })
_sym_db.RegisterMessage(Media)

Url = _reflection.GeneratedProtocolMessageType('Url', (_message.Message,), {
  'DESCRIPTOR' : _URL,
  '__module__' : 'proto.data_pb2'
  # @@protoc_insertion_point(class_scope:microless.socialnetwork.Url)
  })
_sym_db.RegisterMessage(Url)

UserMention = _reflection.GeneratedProtocolMessageType('UserMention', (_message.Message,), {
  'DESCRIPTOR' : _USERMENTION,
  '__module__' : 'proto.data_pb2'
  # @@protoc_insertion_point(class_scope:microless.socialnetwork.UserMention)
  })
_sym_db.RegisterMessage(UserMention)

Creator = _reflection.GeneratedProtocolMessageType('Creator', (_message.Message,), {
  'DESCRIPTOR' : _CREATOR,
  '__module__' : 'proto.data_pb2'
  # @@protoc_insertion_point(class_scope:microless.socialnetwork.Creator)
  })
_sym_db.RegisterMessage(Creator)

Post = _reflection.GeneratedProtocolMessageType('Post', (_message.Message,), {
  'DESCRIPTOR' : _POST,
  '__module__' : 'proto.data_pb2'
  # @@protoc_insertion_point(class_scope:microless.socialnetwork.Post)
  })
_sym_db.RegisterMessage(Post)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035microless/socialnetwork/proto'
  _POSTTYPE._serialized_start=600
  _POSTTYPE._serialized_end=651
  _MEDIA._serialized_start=78
  _MEDIA._serialized_end=123
  _URL._serialized_start=125
  _URL._serialized_end=175
  _USERMENTION._serialized_start=177
  _USERMENTION._serialized_end=225
  _CREATOR._serialized_start=227
  _CREATOR._serialized_end=271
  _POST._serialized_start=274
  _POST._serialized_end=598
# @@protoc_insertion_point(module_scope)
