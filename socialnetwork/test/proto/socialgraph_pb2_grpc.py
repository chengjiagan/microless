# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import socialgraph_pb2 as proto_dot_socialgraph__pb2


class SocialGraphServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFollowers = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/GetFollowers',
                request_serializer=proto_dot_socialgraph__pb2.GetFollowersRequest.SerializeToString,
                response_deserializer=proto_dot_socialgraph__pb2.GetFollowersRespond.FromString,
                )
        self.GetFollowees = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/GetFollowees',
                request_serializer=proto_dot_socialgraph__pb2.GetFolloweesRequest.SerializeToString,
                response_deserializer=proto_dot_socialgraph__pb2.GetFolloweesRespond.FromString,
                )
        self.Follow = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/Follow',
                request_serializer=proto_dot_socialgraph__pb2.FollowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Unfollow = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/Unfollow',
                request_serializer=proto_dot_socialgraph__pb2.UnfollowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.FollowWithUsername = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/FollowWithUsername',
                request_serializer=proto_dot_socialgraph__pb2.FollowWithUsernameRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UnfollowWithUsername = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/UnfollowWithUsername',
                request_serializer=proto_dot_socialgraph__pb2.UnfollowWithUsernameRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.InsertUser = channel.unary_unary(
                '/microless.socialnetwork.socialgraph.SocialGraphService/InsertUser',
                request_serializer=proto_dot_socialgraph__pb2.InsertUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class SocialGraphServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFollowers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Follow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unfollow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FollowWithUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfollowWithUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SocialGraphServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFollowers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowers,
                    request_deserializer=proto_dot_socialgraph__pb2.GetFollowersRequest.FromString,
                    response_serializer=proto_dot_socialgraph__pb2.GetFollowersRespond.SerializeToString,
            ),
            'GetFollowees': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowees,
                    request_deserializer=proto_dot_socialgraph__pb2.GetFolloweesRequest.FromString,
                    response_serializer=proto_dot_socialgraph__pb2.GetFolloweesRespond.SerializeToString,
            ),
            'Follow': grpc.unary_unary_rpc_method_handler(
                    servicer.Follow,
                    request_deserializer=proto_dot_socialgraph__pb2.FollowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Unfollow': grpc.unary_unary_rpc_method_handler(
                    servicer.Unfollow,
                    request_deserializer=proto_dot_socialgraph__pb2.UnfollowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'FollowWithUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.FollowWithUsername,
                    request_deserializer=proto_dot_socialgraph__pb2.FollowWithUsernameRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UnfollowWithUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfollowWithUsername,
                    request_deserializer=proto_dot_socialgraph__pb2.UnfollowWithUsernameRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'InsertUser': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertUser,
                    request_deserializer=proto_dot_socialgraph__pb2.InsertUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'microless.socialnetwork.socialgraph.SocialGraphService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SocialGraphService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFollowers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/GetFollowers',
            proto_dot_socialgraph__pb2.GetFollowersRequest.SerializeToString,
            proto_dot_socialgraph__pb2.GetFollowersRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/GetFollowees',
            proto_dot_socialgraph__pb2.GetFolloweesRequest.SerializeToString,
            proto_dot_socialgraph__pb2.GetFolloweesRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Follow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/Follow',
            proto_dot_socialgraph__pb2.FollowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unfollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/Unfollow',
            proto_dot_socialgraph__pb2.UnfollowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FollowWithUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/FollowWithUsername',
            proto_dot_socialgraph__pb2.FollowWithUsernameRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfollowWithUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/UnfollowWithUsername',
            proto_dot_socialgraph__pb2.UnfollowWithUsernameRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/microless.socialnetwork.socialgraph.SocialGraphService/InsertUser',
            proto_dot_socialgraph__pb2.InsertUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
